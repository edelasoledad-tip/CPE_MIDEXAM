---
  - name: Elasticsearch installation
    hosts: all

    tasks:
    - name: Include variables from config.yaml
      include_vars:
        file: config.yaml

    - name: Install Elasticsearch dependencies | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: default-jre
        service: ""
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install Elasticsearch dependencies | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: nginx
        service: "nginx"
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install Elasticsearch | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
        repo: "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
        package: elasticsearch
        service: ""
      when: ansible_facts['os_family'] == 'Debian' 

    - name: Install Elasticsearch dependencies | installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: "java-1.8.0-openjdk"
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Install Elasticsearch dependencies | installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: "nginx"
        src: ""
        dest: ""
        service: "nginx"
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Install Elasticsearch | installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: elasticsearch
        src: elasticsearch.repo-centos
        dest: "/etc/yum.repos.d/elasticsearch.repo"
        service: ""
      when: ansible_facts['os_family'] == 'RedHat' 

    - name: Stop Firewall | stopfirewallubuntu role
      include_role:
        name: stopfirewallubuntu
      when: ansible_facts['os_family'] == 'Debian' 

    - name: Stop Firewall | stopfirewallcentos role
      include_role:
        name: stopfirewallcentos
      when: ansible_facts['os_family'] == 'RedHat' 

    - name: Configure Elasticsearch | elasticsearchconfiguration role
      include_role:
        name: elasticsearchconfiguration


  - name: Kibana installation
    hosts: all

    tasks:
    - name: Include variables from config.yaml
      include_vars:
        file: config.yaml

    - name: Install Kibana dependencies | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: default-jre
        service: ""
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install Kibana dependencies | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: nginx
        service: "nginx"
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install Kibana | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
        repo: "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
        package: kibana
        service: ""
      when: ansible_facts['os_family'] == 'Debian' 

    - name: Install Kibana dependencies | installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: "java-1.8.0-openjdk"
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Install Elasticsearch dependencies | installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: "nginx"
        src: ""
        dest: ""
        service: "nginx"
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Install Kibana | installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: kibana
        src: elasticsearch.repo-centos
        dest: "/etc/yum.repos.d/elasticsearch.repo"
        service: ""
      when: ansible_facts['os_family'] == 'RedHat' 

    - name: Stop Firewall | stopfirewallubuntu role
      include_role:
        name: stopfirewallubuntu
      when: ansible_facts['os_family'] == 'Debian' 

    - name: Stop Firewall | stopfirewallcentos role
      include_role:
        name: stopfirewallcentos
      when: ansible_facts['os_family'] == 'RedHat' 

    - name: Configure Kibana | configurekibana role
      include_role:
        name: kibanaconfiguration


  - name: Logstash installation and configuration
    hosts: all

    tasks:
    - name: Include variables from config.yaml
      include_vars:
        file: config.yaml

    - name: Install Logstash dependencies | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: default-jre
        service: ""
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install Logstash dependencies | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: nginx
        service: "nginx"
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install Logstash | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
        repo: "deb https://artifacts.elastic.co/packages/7.x/apt stable main"
        package: logstash
        service: ""
      when: ansible_facts['os_family'] == 'Debian' 

    - name: Install Logstash dependencies | installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: "java-1.8.0-openjdk"
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Install Logstash dependencies | installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: "nginx"
        src: ""
        dest: ""
        service: "nginx"
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Install Logstash | installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: logstash
        src: elasticsearch.repo-centos
        dest: "/etc/yum.repos.d/elasticsearch.repo"
        service: ""
      when: ansible_facts['os_family'] == 'RedHat' 

    - name: Stop Firewall | stopfirewallubuntu role
      include_role:
        name: stopfirewallubuntu
      when: ansible_facts['os_family'] == 'Debian' 

    - name: Stop Firewall | stopfirewallcentos role
      include_role:
        name: stopfirewallcentos
      when: ansible_facts['os_family'] == 'RedHat' 

    - name: Configure Logstash | logstashconfiguration role
      include_role:
        name: logstashconfiguration


        
  - name: Nagios installation
    hosts: ubuntu

    tasks:
    - name: Include variables from config.yaml
      include_vars:
        file: config.yaml

    - name: Install Nagios dependencies | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package:
          - autoconf
          - gcc
          - libc6
          - make
          - wget
          - libssl-dev
          - gawk
          - dc
          - build-essential
          - snmp
          - libnet-snmp-perl
          - gettext
          - unzip
          - apache2
          - php
          - libapache2-mod-php7.4
          - libgd-dev
          - python3
          - python3-pip
        service: ""
      when: ansible_facts['os_family'] == 'Debian'

    - name: Configure Nagios | nagiosubuntuconfiguration role
      include_role:
        name: nagiosubuntuconfiguration
      when: ansible_facts['os_family'] == 'Debian'


  - name: Grafana
    hosts: all

    tasks:
    - name: Install Grafana | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: "https://packages.grafana.com/gpg.key"
        repo: "deb https://packages.grafana.com/oss/deb stable main"
        package: "grafana"
        service: "grafana-server"
      when: ansible_facts['os_family'] == 'Debian'
    
    - name: Stop Firewall | stopfirewallubuntu role
      include_role:
        name: stopfirewallubuntu
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install Grafana | installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        src: grafana.repo-centos
        dest: "/etc/yum.repos.d/grafana.repo"
        package: grafana
        service: grafana-server
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Stop Firewall | stopfirewallcentos role
      include_role:
        name: stopfirewallcentos
      when: ansible_facts['os_family'] == 'RedHat'


  - name: Telegraf installation
    hosts: all

    tasks:
    - name: Install Telegraf dependencies | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: gnupg2
        service: ""
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install Telegraf dependencies | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: software-properties-common
        service: ""
      when: ansible_facts['os_family'] == 'Debian' 

    - name: Install InfluxDB | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: "https://repos.influxdata.com/influxdb.key"
        repo: "deb https://repos.influxdata.com/ubuntu bionic stable"
        package: influxdb
        service: influxdb
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install Telegraf | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: telegraf
        service: telegraf
      when: ansible_facts['os_family'] == 'Debian'
    
    - name: Stop Firewall | stopfirewallubuntu role
      include_role:
        name: stopfirewallubuntu
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install InfluxDB | installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        src: influxdb.repo-centos
        dest: /etc/yum.repos.d/influxdb.repo
        package: influxdb
        service: influxdb
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Install Telegraf | installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        src: ""
        dest: ""
        package: telegraf
        service: telegraf
      when: ansible_facts['os_family'] == 'RedHat'
  
    - name: Stop Firewall | stopfirewallcentos role
      include_role:
        name: stopfirewallcentos
      when: ansible_facts['os_family'] == 'RedHat'


  - name: Prometheus installation
    hosts: all

    tasks:
    - name: Install Prometheus | installprometheusubuntu role
      include_role:
        name: installprometheusubuntu
      vars:
        src: prometheus.service
      when: ansible_facts['os_family'] == 'Debian'
    
    - name: Stop Firewall | stopfirewallubuntu role
      include_role:
        name: stopfirewallubuntu
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install Prometheus | installprometeuscentos role
      include_role:
        name: installprometheuscentos
      vars:
        src: prometheus.service
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Stop Firewall | stopfirewallcentos role
      include_role:
        name: stopfirewallcentos
      when: ansible_facts['os_family'] == 'RedHat'

  - name: HTTPD installation and configuration
    hosts: all

    tasks:
    - name: Include config.yaml variables
      include_vars:
        file: config.yaml

    - name: Install Apache | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package:
          - apache2
          - php
          - libapache2-mod-php
          - php-mysql
        service: ""
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install HTTPD | installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package:
          - httpd
          - php
          - php-mysqlnd
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['os_family'] == 'RedHat' 

    #- name: Configure Apache2 | apacheubuntuconfiguration role
     # include_role:
     #   name: apacheubuntuconfiguration
     # when: ansible_facts['os_family'] == 'Debian'
  
    #- name: Configure HTTPD | configurehttpdcentos role
      #include_role:
     #   name: httpdcentosconfiguration
      #when: ansible_facts['os_family'] == 'RedHat'


  - name: MariaDB installation
    hosts: all

    tasks:
    - name: Install MariaDB | installpackageubuntu role
      include_role:
        name: installpackageubuntu
      vars:
        url: ""
        repo: ""
        package: mariadb-server
        service: ""
      when: ansible_facts['os_family'] == 'Debian'

    - name: Install MariaDB | installpackagecentos role
      include_role:
        name: installpackagecentos
      vars:
        package: mariadb-server
        src: ""
        dest: ""
        service: ""
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Stop Firewall on Ubuntu
      include_role:
        name: stopfirewallubuntu
      when: ansible_facts['os_family'] == 'Debian'

    - name: Stop Firewall on CentOS
      include_role:
        name: stopfirewallcentos
      when: ansible_facts['os_family'] == 'RedHat'

    - name: Start MariaDB on Ubuntu
      include_role:
        name: mariadbubuntu
      when: ansible_facts['os_family'] == 'Debian'
    
    - name: Start MariaDB on CentOS
      include_role:
        name: mariadbcentos
      when: ansible_facts['os_family'] == 'RedHat'
